
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  email: 'email',
  phone: 'phone',
  owner: 'owner',
  banner: 'banner',
  logo: 'logo',
  about_shop: 'about_shop',
  shop_mission: 'shop_mission',
  social: 'social',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  password: 'password',
  address: 'address',
  gender: 'gender',
  type: 'type',
  about: 'about',
  createdAt: 'createdAt',
  photo: 'photo',
  updatedAt: 'updatedAt'
};

exports.Prisma.TypesScalarFieldEnum = {
  id: 'id',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type_id: 'type_id',
  shop_id: 'shop_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  photo: 'photo'
};

exports.Prisma.ItemsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  category_id: 'category_id',
  shop_id: 'shop_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  photo: 'photo'
};

exports.Prisma.OrderListScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.ListItemsScalarFieldEnum = {
  id: 'id',
  order_list_id: 'order_list_id',
  item_id: 'item_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  quantity: 'quantity'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  currency: 'currency',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  order_id: 'order_id',
  status: 'status',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  order_list_id: 'order_list_id',
  user_id: 'user_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  total_price: 'total_price'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Genders = exports.$Enums.Genders = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.UserTypes = exports.$Enums.UserTypes = {
  CUSTOMER: 'CUSTOMER',
  OWNER: 'OWNER',
  MAMBER: 'MAMBER'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  CREATED: 'CREATED',
  ORDERED: 'ORDERED'
};

exports.Prisma.ModelName = {
  Shop: 'Shop',
  Users: 'Users',
  Types: 'Types',
  Categories: 'Categories',
  Items: 'Items',
  OrderList: 'OrderList',
  ListItems: 'ListItems',
  Payment: 'Payment',
  Orders: 'Orders'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\projects\\E-cafe\\back-end\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\projects\\E-cafe\\back-end\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ngenerator erd {\n  provider = \"prisma-erd-generator\"\n  output   = \"./ERD.png\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Shop {\n  id           Int          @id @unique @default(autoincrement())\n  name         String       @unique\n  address      String\n  email        String\n  phone        String\n  owner        String\n  banner       String\n  logo         String\n  about_shop   String\n  shop_mission String\n  social       Json         @db.Json\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n  Categories   Categories[]\n  Items        Items[]\n}\n\nmodel Users {\n  id        Int         @id @unique @default(autoincrement())\n  name      String\n  email     String\n  phone     String?\n  password  String\n  address   String?\n  gender    Genders\n  type      UserTypes   @default(CUSTOMER)\n  about     String?\n  createdAt DateTime    @default(now())\n  photo     String?\n  updatedAt DateTime    @updatedAt\n  OrderList OrderList[]\n  Orders    Orders[]\n  Payment   Payment[]\n}\n\nmodel Types {\n  id         Int          @id @unique @default(autoincrement())\n  type       String\n  createdAt  DateTime     @default(now())\n  updatedAt  DateTime     @updatedAt\n  Categories Categories[]\n}\n\nmodel Categories {\n  id        Int      @id @unique @default(autoincrement())\n  name      String\n  type_id   Int\n  shop_id   Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  photo     String?\n  shop      Shop     @relation(fields: [shop_id], references: [id])\n  type      Types    @relation(fields: [type_id], references: [id])\n  Items     Items[]\n}\n\nmodel Items {\n  id          Int         @id @unique @default(autoincrement())\n  name        String\n  description String\n  price       Int\n  category_id Int\n  shop_id     Int\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n  photo       String?\n  category    Categories  @relation(fields: [category_id], references: [id])\n  shop        Shop        @relation(fields: [shop_id], references: [id])\n  ListItems   ListItems[]\n}\n\nmodel OrderList {\n  id        Int         @id @unique @default(autoincrement())\n  user_id   Int\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n  status    OrderStatus @default(CREATED)\n  ListItems ListItems[]\n  user      Users       @relation(fields: [user_id], references: [id])\n  Orders    Orders[]\n}\n\nmodel ListItems {\n  id            Int       @id @unique @default(autoincrement())\n  order_list_id Int\n  item_id       Int\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  quantity      Int       @default(1)\n  item          Items     @relation(fields: [item_id], references: [id])\n  order_list    OrderList @relation(fields: [order_list_id], references: [id])\n}\n\nmodel Payment {\n  id             Int      @id @default(autoincrement())\n  amount         Int\n  currency       String   @default(\"INR\")\n  payment_method String?\n  transaction_id String?  @unique\n  order_id       String?  @unique\n  status         String\n  userId         Int?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  order          Orders?  @relation(fields: [order_id], references: [order_id])\n  user           Users?   @relation(fields: [userId], references: [id])\n}\n\nmodel Orders {\n  id            Int       @id @unique @default(autoincrement())\n  order_id      String    @unique\n  order_list_id Int\n  user_id       Int\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  status        String\n  total_price   Int\n  order_list    OrderList @relation(fields: [order_list_id], references: [id])\n  user          Users     @relation(fields: [user_id], references: [id])\n  Payment       Payment[]\n}\n\nenum Genders {\n  MALE\n  FEMALE\n}\n\nenum UserTypes {\n  CUSTOMER\n  OWNER\n  MAMBER\n}\n\nenum OrderStatus {\n  CREATED\n  ORDERED\n}\n",
  "inlineSchemaHash": "6cc6faf542a73ae8adfc8285939e0fef3f2e830a2f3e57b656bbedb30698dc8f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Shop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"about_shop\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop_mission\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"social\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Categories\",\"kind\":\"object\",\"type\":\"Categories\",\"relationName\":\"CategoriesToShop\"},{\"name\":\"Items\",\"kind\":\"object\",\"type\":\"Items\",\"relationName\":\"ItemsToShop\"}],\"dbName\":null},\"Users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Genders\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"UserTypes\"},{\"name\":\"about\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"OrderList\",\"kind\":\"object\",\"type\":\"OrderList\",\"relationName\":\"OrderListToUsers\"},{\"name\":\"Orders\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrdersToUsers\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUsers\"}],\"dbName\":null},\"Types\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Categories\",\"kind\":\"object\",\"type\":\"Categories\",\"relationName\":\"CategoriesToTypes\"}],\"dbName\":null},\"Categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"CategoriesToShop\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"Types\",\"relationName\":\"CategoriesToTypes\"},{\"name\":\"Items\",\"kind\":\"object\",\"type\":\"Items\",\"relationName\":\"CategoriesToItems\"}],\"dbName\":null},\"Items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Categories\",\"relationName\":\"CategoriesToItems\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ItemsToShop\"},{\"name\":\"ListItems\",\"kind\":\"object\",\"type\":\"ListItems\",\"relationName\":\"ItemsToListItems\"}],\"dbName\":null},\"OrderList\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"ListItems\",\"kind\":\"object\",\"type\":\"ListItems\",\"relationName\":\"ListItemsToOrderList\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"OrderListToUsers\"},{\"name\":\"Orders\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrderListToOrders\"}],\"dbName\":null},\"ListItems\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_list_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Items\",\"relationName\":\"ItemsToListItems\"},{\"name\":\"order_list\",\"kind\":\"object\",\"type\":\"OrderList\",\"relationName\":\"ListItemsToOrderList\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrdersToPayment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"PaymentToUsers\"}],\"dbName\":null},\"Orders\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order_list_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_list\",\"kind\":\"object\",\"type\":\"OrderList\",\"relationName\":\"OrderListToOrders\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"OrdersToUsers\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrdersToPayment\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

